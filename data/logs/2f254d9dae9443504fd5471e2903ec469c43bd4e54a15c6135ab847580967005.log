2023-07-01 13:31:12,982 CRIT Supervisor is running as root.  Privileges were not dropped because no user is specified in the config file.  If you intend to run as root, you can set user=root in the config file to avoid this message.
2023-07-01 13:31:12,984 INFO supervisord started with pid 7
2023-07-01 13:31:13,986 INFO spawned: 'nginx' with pid 10
2023-07-01 13:31:13,988 INFO spawned: 'app' with pid 11
2023-07-01 13:31:15,021 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
2023-07-01 13:31:15,021 INFO success: app entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
[CTRL] POST /setup
[Time: 01.07.23 13:31:22] [Level: info] id: 133966b970f6ff39
[Time: 01.07.23 13:31:22] [Level: info] coordinator: True
[Time: 01.07.23 13:31:22] [Level: info] clients: ['80ed02749482669c', '133966b970f6ff39']
[Time: 01.07.23 13:31:22] [Level: info] state: initial
[CLIENT] Parsing parameter file...
[API] /setup parsing parameter file 
[API] /setup config file found ... parsing file: /mnt/input/config.yaml
YAML file does not follow specification: missing key: eigenvalues
Setting default: eigenvalues.tsv
YAML file does not follow specification: missing key: explained_variance
Setting default: eigenvalues.tsv
YAML file does not follow specification: missing key: output delimiter
Setting default: tab
[API] /setup config file found ... parsing done
[CLIENT] finished parsing parameter file.
[STARTUP] Instantiate SVD
[Time: 01.07.23 13:31:22] [Level: info] transition: init_pca
[Time: 01.07.23 13:31:23] [Level: info] state: init_pca
[STARTUP] Copy configuration and create dir
/mnt/input/hospital_data_bredel_1.csv
TEST: ['/mnt/input/data_wine_1.csv', '/mnt/input/data_wine_2.csv', '/mnt/input/data_wine_3.csv']
[STARTUP] Configuration copied
Log Transform performed
out {'Row names': array(['fruity', 'woody', 'coffee'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}
[Time: 01.07.23 13:31:24] [Level: info] transition: check_row_names
[Time: 01.07.23 13:31:25] [Level: info] state: check_row_names
gathering
[CTRL] POST /data
unifying row names
[{'Row names': array(['fruity', 'woody', 'coffee'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}, {'Row names': array(['fruity', 'woody', 'coffee'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}]
['fruity', 'woody', 'coffee']
['fruity', 'woody', 'coffee']
[6, 6, 6]
[API] [COORDINATOR] row names identified!
[Time: 01.07.23 13:31:28] [Level: info] transition: wait_for_params
[Time: 01.07.23 13:31:29] [Level: info] state: wait_for_params
setting parameters
[API] Setting parameters
['fruity', 'woody', 'coffee']
INDEX
[0, 1, 2]
[Time: 01.07.23 13:31:29] [Level: info] transition: aggregate_sums
[CTRL] GET /data
[Time: 01.07.23 13:31:30] [Level: info] state: aggregate_sums
[CTRL] POST /data
setting parameters
[{'Sums': array([6.39231742, 5.80735492, 5.5849625 ]), 'Sample count': 3}, {'Sums': array([6.5849625 , 5.9068906 , 6.22881869]), 'Sample count': 3}]
SUMS
[2.16287999 1.95237425 1.96896353]
[Time: 01.07.23 13:31:31] [Level: info] transition: compute_std
[Time: 01.07.23 13:31:32] [Level: info] state: compute_std
(3, 1)
[Time: 01.07.23 13:31:32] [Level: info] transition: aggregate_stds
[CTRL] GET /data
[Time: 01.07.23 13:31:33] [Level: info] state: aggregate_stds
[CTRL] POST /data
setting parameters
[1.94579145 1.64027687 2.14938332]
[1.06128843 1.44375465 0.39662476]
COMPUTE STD
[3.00707988 3.08403153 2.54600807]
STD
[0.77551014 0.78537017 0.71358364]
[2 0]
['coffee' 'fruity']
(array([], dtype=int64),)
[]
[Time: 01.07.23 13:31:34] [Level: info] transition: apply_scaling
[Time: 01.07.23 13:31:35] [Level: info] state: apply_scaling
[2 0]
(array([], dtype=int64),)
CURRENT DATA:  <apps.svd.TabData.TabData object at 0x7f067f637250>
[Time: 01.07.23 13:31:35] [Level: info] transition: mfa_prerequisites
[CTRL] GET /data
[Time: 01.07.23 13:31:36] [Level: info] state: mfa_prerequisites
Calling start_power_iteration
[Time: 01.07.23 13:31:36] [Level: info] transition: start_power_iteration
[Time: 01.07.23 13:31:37] [Level: info] state: start_power_iteration
[STARTUP] Computing covariance matrix
[STARTUP] Random initialisation
TABDATA SCALED
[[-1.49950327  0.54426434  0.83103354]
 [ 1.088634    0.06064115 -1.21264378]
 [ 1.44487122 -0.53813037 -1.35788361]]
[Time: 01.07.23 13:31:37] [Level: info] transition: aggregate_randomized_projections_cov
[Time: 01.07.23 13:31:38] [Level: info] state: aggregate_randomized_projections_cov
[CTRL] POST /data
3
Global cov
[[ 1.         -0.9230407  -0.9282598 ]
 [-0.9230407   1.          0.89413101]
 [-0.9282598   0.89413101  1.        ]]
resetting k
[Time: 01.07.23 13:31:40] [Level: info] transition: compute_final_h_cov
[Time: 01.07.23 13:31:41] [Level: info] state: compute_final_h_cov
Setting k
starting eigenvector norms
2
[Time: 01.07.23 13:31:41] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:31:42] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 9.626454740879916}, {'Local Eigenvector norm': 4.525391084925003}]
[Time: 01.07.23 13:31:43] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:31:44] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:31:44] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:31:45] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [0.2698767637489]}, {'Local Conorms': [-0.2698767637489001]}]
[Time: 01.07.23 13:31:46] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:31:47] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
2
[Time: 01.07.23 13:31:47] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:31:48] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 0.2670862051248467}, {'Local Eigenvector norm': 0.26331493842382325}]
[Time: 01.07.23 13:31:49] [Level: info] transition: normalize_g
[Time: 01.07.23 13:31:50] [Level: info] state: normalize_g
Normalising
(3, 2)
2
End normalising
(3, 2)
(2, 2)
(2,)
(3, 2)
[Time: 01.07.23 13:31:50] [Level: info] transition: separate_pca
[CTRL] GET /data
[Time: 01.07.23 13:31:51] [Level: info] state: separate_pca
[Time: 01.07.23 13:31:51] [Level: info] transition: init_pca
[Time: 01.07.23 13:31:52] [Level: info] state: init_pca
[STARTUP] Copy configuration and create dir
/mnt/input/hospital_data_bredel_1.csv
TEST: ['/mnt/input/data_wine_1.csv', '/mnt/input/data_wine_2.csv', '/mnt/input/data_wine_3.csv']
[STARTUP] Configuration copied
Log Transform performed
out {'Row names': array(['red_fruit', 'roasted', 'vanillin', 'woody_2'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0])}
[Time: 01.07.23 13:31:52] [Level: info] transition: check_row_names
[Time: 01.07.23 13:31:53] [Level: info] state: check_row_names
gathering
[CTRL] POST /data
unifying row names
[{'Row names': array(['red_fruit', 'roasted', 'vanillin', 'woody_2'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0])}, {'Row names': array(['red_fruit', 'roasted', 'vanillin', 'woody_2'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0])}]
['red_fruit', 'roasted', 'vanillin', 'woody_2']
['woody_2', 'vanillin', 'roasted', 'red_fruit']
[6, 6, 6, 6]
[API] [COORDINATOR] row names identified!
[Time: 01.07.23 13:31:55] [Level: info] transition: wait_for_params
[Time: 01.07.23 13:31:56] [Level: info] state: wait_for_params
setting parameters
[API] Setting parameters
['woody_2', 'vanillin', 'roasted', 'red_fruit']
INDEX
[3, 2, 1, 0]
[Time: 01.07.23 13:31:56] [Level: info] transition: aggregate_sums
[CTRL] GET /data
[Time: 01.07.23 13:31:57] [Level: info] state: aggregate_sums
[CTRL] POST /data
setting parameters
[{'Sums': array([5.39231742, 6.32192809, 6.4918531 , 6.4918531 ]), 'Sample count': 3}, {'Sums': array([6.7548875 , 6.12928302, 6.7548875 , 7.        ]), 'Sample count': 3}]
SUMS
[2.02453415 2.07520185 2.2077901  2.24864218]
[Time: 01.07.23 13:31:58] [Level: info] transition: compute_std
[Time: 01.07.23 13:31:59] [Level: info] state: compute_std
(4, 1)
[Time: 01.07.23 13:31:59] [Level: info] transition: aggregate_stds
[CTRL] GET /data
[Time: 01.07.23 13:32:00] [Level: info] state: aggregate_stds
[CTRL] POST /data
setting parameters
[1.85570183 2.07218448 0.54320072 0.5589529 ]
[0.8213831  1.75298098 0.67243226 0.68818444]
COMPUTE STD
[2.67708493 3.82516546 1.21563298 1.24713734]
STD
[0.73172193 0.8746617  0.49307869 0.49942714]
[2 3 0]
['roasted' 'red_fruit' 'woody_2']
(array([], dtype=int64),)
[]
[Time: 01.07.23 13:32:01] [Level: info] transition: apply_scaling
[Time: 01.07.23 13:32:02] [Level: info] state: apply_scaling
[2 3 0]
(array([], dtype=int64),)
CURRENT DATA:  <apps.svd.TabData.TabData object at 0x7f067f52c9d0>
[Time: 01.07.23 13:32:02] [Level: info] transition: mfa_prerequisites
[CTRL] GET /data
[Time: 01.07.23 13:32:03] [Level: info] state: mfa_prerequisites
Calling start_power_iteration
[Time: 01.07.23 13:32:03] [Level: info] transition: start_power_iteration
[Time: 01.07.23 13:32:04] [Level: info] state: start_power_iteration
[STARTUP] Computing covariance matrix
[STARTUP] Random initialisation
TABDATA SCALED
[[ 1.06983368 -0.60073593 -1.40016871]
 [ 1.05732096  0.28208191 -1.22927739]
 [ 0.76493348  0.23148028 -1.26314037]
 [-1.32888189  0.14673995  0.67341218]]
[Time: 01.07.23 13:32:04] [Level: info] transition: aggregate_randomized_projections_cov
[Time: 01.07.23 13:32:05] [Level: info] state: aggregate_randomized_projections_cov
[CTRL] POST /data
3
Global cov
[[ 1.          0.85570599  0.87568938 -0.82382266]
 [ 0.85570599  1.          0.96713063 -0.91960414]
 [ 0.87568938  0.96713063  1.         -0.89902451]
 [-0.82382266 -0.91960414 -0.89902451  1.        ]]
[Time: 01.07.23 13:32:07] [Level: info] transition: compute_final_h_cov
[Time: 01.07.23 13:32:08] [Level: info] state: compute_final_h_cov
Setting k
starting eigenvector norms
3
[Time: 01.07.23 13:32:08] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:32:09] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 9.652416136879374}, {'Local Eigenvector norm': 8.708671126667005}]
[Time: 01.07.23 13:32:10] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:32:11] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:32:11] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:32:12] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [0.2183088987223157]}, {'Local Conorms': [-0.21830889872231568]}]
[Time: 01.07.23 13:32:13] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:32:14] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
3
[Time: 01.07.23 13:32:14] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:32:15] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 0.4806023595033607}, {'Local Eigenvector norm': 0.4750369465723141}]
[Time: 01.07.23 13:32:16] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:32:17] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:32:17] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:32:18] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [-0.014001542080085671, -0.08102233772145831]}, {'Local Conorms': [0.014001542080085801, 0.08102233772145835]}]
[Time: 01.07.23 13:32:19] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:32:20] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
3
[Time: 01.07.23 13:32:20] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:32:21] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 0.48583469480803615}, {'Local Eigenvector norm': 0.04834002498154096}]
[Time: 01.07.23 13:32:22] [Level: info] transition: normalize_g
[Time: 01.07.23 13:32:23] [Level: info] state: normalize_g
Normalising
(3, 3)
3
End normalising
(3, 3)
(3, 3)
(3,)
(3, 3)
[Time: 01.07.23 13:32:23] [Level: info] transition: separate_pca
[CTRL] GET /data
[Time: 01.07.23 13:32:24] [Level: info] state: separate_pca
[Time: 01.07.23 13:32:24] [Level: info] transition: init_pca
[Time: 01.07.23 13:32:25] [Level: info] state: init_pca
[STARTUP] Copy configuration and create dir
/mnt/input/hospital_data_bredel_1.csv
TEST: ['/mnt/input/data_wine_1.csv', '/mnt/input/data_wine_2.csv', '/mnt/input/data_wine_3.csv']
[STARTUP] Configuration copied
Log Transform performed
out {'Row names': array(['fruity_2', 'butter', 'woody_3'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}
[Time: 01.07.23 13:32:25] [Level: info] transition: check_row_names
[Time: 01.07.23 13:32:26] [Level: info] state: check_row_names
gathering
[CTRL] POST /data
unifying row names
[{'Row names': array(['fruity_2', 'butter', 'woody_3'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}, {'Row names': array(['fruity_2', 'butter', 'woody_3'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}]
['fruity_2', 'butter', 'woody_3']
['woody_3', 'fruity_2', 'butter']
[6, 6, 6]
[API] [COORDINATOR] row names identified!
[Time: 01.07.23 13:32:28] [Level: info] transition: wait_for_params
[Time: 01.07.23 13:32:29] [Level: info] state: wait_for_params
setting parameters
[API] Setting parameters
['woody_3', 'fruity_2', 'butter']
INDEX
[2, 0, 1]
[Time: 01.07.23 13:32:29] [Level: info] transition: aggregate_sums
[CTRL] GET /data
[Time: 01.07.23 13:32:30] [Level: info] state: aggregate_sums
[CTRL] POST /data
setting parameters
[{'Sums': array([6.        , 7.32192809, 6.12928302]), 'Sample count': 3}, {'Sums': array([6.97727992, 4.169925  , 7.39231742]), 'Sample count': 3}]
SUMS
[2.16287999 1.91530885 2.25360007]
[Time: 01.07.23 13:32:31] [Level: info] transition: compute_std
[Time: 01.07.23 13:32:32] [Level: info] state: compute_std
(3, 1)
[Time: 01.07.23 13:32:32] [Level: info] transition: aggregate_stds
[CTRL] GET /data
[Time: 01.07.23 13:32:33] [Level: info] state: aggregate_stds
[CTRL] POST /data
setting parameters
[2.07958967 1.34906669 1.88282629]
[0.92749021 1.05604771 1.31083349]
COMPUTE STD
[3.00707988 2.4051144  3.19365978]
STD
[0.77551014 0.69355813 0.79920708]
[1 0]
['fruity_2' 'woody_3']
(array([], dtype=int64),)
[]
[Time: 01.07.23 13:32:34] [Level: info] transition: apply_scaling
[Time: 01.07.23 13:32:35] [Level: info] state: apply_scaling
[1 0]
(array([], dtype=int64),)
CURRENT DATA:  <apps.svd.TabData.TabData object at 0x7f067f637dc0>
[Time: 01.07.23 13:32:35] [Level: info] transition: mfa_prerequisites
[CTRL] GET /data
[Time: 01.07.23 13:32:36] [Level: info] state: mfa_prerequisites
Calling start_power_iteration
[Time: 01.07.23 13:32:36] [Level: info] transition: start_power_iteration
[Time: 01.07.23 13:32:37] [Level: info] state: start_power_iteration
[STARTUP] Computing covariance matrix
[STARTUP] Random initialisation
TABDATA SCALED
[[ 1.07944432 -0.21002947 -1.49950327]
 [ 0.12211111  0.58627998  1.56395131]
 [ 0.69288031  0.08549477 -1.56855477]]
[Time: 01.07.23 13:32:37] [Level: info] transition: aggregate_randomized_projections_cov
[Time: 01.07.23 13:32:38] [Level: info] state: aggregate_randomized_projections_cov
[CTRL] POST /data
3
Global cov
[[ 1.         -0.61912682  0.95791864]
 [-0.61912682  1.         -0.69649453]
 [ 0.95791864 -0.69649453  1.        ]]
resetting k
[Time: 01.07.23 13:32:40] [Level: info] transition: compute_final_h_cov
[Time: 01.07.23 13:32:41] [Level: info] state: compute_final_h_cov
Setting k
starting eigenvector norms
2
[Time: 01.07.23 13:32:41] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:32:42] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 8.261402397506613}, {'Local Eigenvector norm': 4.366739072353798}]
[Time: 01.07.23 13:32:43] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:32:44] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:32:44] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:32:45] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [-0.021904850008904634]}, {'Local Conorms': [0.021904850008904884]}]
[Time: 01.07.23 13:32:46] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:32:47] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
2
[Time: 01.07.23 13:32:47] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:32:48] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 0.8407091183139682}, {'Local Eigenvector norm': 1.3498905664774647}]
[Time: 01.07.23 13:32:49] [Level: info] transition: normalize_g
[Time: 01.07.23 13:32:50] [Level: info] state: normalize_g
Normalising
(3, 2)
2
End normalising
(3, 2)
(2, 2)
(2,)
(3, 2)
[Time: 01.07.23 13:32:50] [Level: info] transition: separate_pca
[CTRL] GET /data
[Time: 01.07.23 13:32:51] [Level: info] state: separate_pca
Starting scale tabdata
[Time: 01.07.23 13:32:51] [Level: info] transition: scale_tabdata
[Time: 01.07.23 13:32:52] [Level: info] state: scale_tabdata
Starting merge tabdata
[Time: 01.07.23 13:32:52] [Level: info] transition: merging_tabdata
[Time: 01.07.23 13:32:53] [Level: info] state: merging_tabdata
Starting global pca
[Time: 01.07.23 13:32:53] [Level: info] transition: init_pca
[Time: 01.07.23 13:32:54] [Level: info] state: init_pca
[STARTUP] Copy configuration and create dir
/mnt/input/hospital_data_bredel_1.csv
TEST: ['/mnt/input/data_wine_1.csv', '/mnt/input/data_wine_2.csv', '/mnt/input/data_wine_3.csv']
Log Transform performed
out {'Row names': array(['fruity', 'woody', 'coffee', 'woody_2', 'vanillin', 'roasted',
       'red_fruit', 'woody_3', 'fruity_2', 'butter'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}
[Time: 01.07.23 13:32:54] [Level: info] transition: check_row_names
[CTRL] POST /data
[Time: 01.07.23 13:32:55] [Level: info] state: check_row_names
gathering
unifying row names
[{'Row names': array(['fruity', 'woody', 'coffee', 'woody_2', 'vanillin', 'roasted',
       'red_fruit', 'woody_3', 'fruity_2', 'butter'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}, {'Row names': array(['fruity', 'woody', 'coffee', 'woody_2', 'vanillin', 'roasted',
       'red_fruit', 'woody_3', 'fruity_2', 'butter'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])}]
['fruity', 'woody', 'coffee', 'woody_2', 'vanillin', 'roasted', 'red_fruit', 'woody_3', 'fruity_2', 'butter']
['fruity_2', 'woody', 'woody_2', 'woody_3', 'fruity', 'roasted', 'coffee', 'red_fruit', 'vanillin', 'butter']
[6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[API] [COORDINATOR] row names identified!
[Time: 01.07.23 13:32:55] [Level: info] transition: wait_for_params
[Time: 01.07.23 13:32:56] [Level: info] state: wait_for_params
setting parameters
[API] Setting parameters
['fruity_2', 'woody', 'woody_2', 'woody_3', 'fruity', 'roasted', 'coffee', 'red_fruit', 'vanillin', 'butter']
INDEX
[8, 1, 3, 7, 0, 5, 2, 6, 4, 9]
[Time: 01.07.23 13:32:56] [Level: info] transition: aggregate_sums
[CTRL] GET /data
[Time: 01.07.23 13:32:57] [Level: info] state: aggregate_sums
[CTRL] POST /data
setting parameters
[{'Sums': array([ 1.35278446, -0.72872427, -1.52121028, -1.80672058, -1.26866805,
       -0.75260883, -1.40308646, -0.97668506, -0.52031074, -2.05856002]), 'Sample count': 3}, {'Sums': array([-2.57772897, -0.60141028,  0.41381638,  0.16710561, -0.22650852,
       -0.45185842,  0.18660243, -0.00570335, -0.62567151,  0.18580577]), 'Sample count': 3}]
SUMS
[-0.20415742 -0.22168909 -0.18456565 -0.27326916 -0.24919609 -0.20074454
 -0.20274734 -0.1637314  -0.19099704 -0.31212571]
[Time: 01.07.23 13:32:58] [Level: info] transition: compute_std
[Time: 01.07.23 13:32:59] [Level: info] state: compute_std
(10, 1)
[Time: 01.07.23 13:32:59] [Level: info] transition: aggregate_stds
[CTRL] GET /data
[Time: 01.07.23 13:33:00] [Level: info] state: aggregate_stds
[CTRL] POST /data
setting parameters
[1.59784258 2.24409247 2.79600251 4.93393237 4.52546733 1.89542063
 3.4379803  2.13128906 1.98878656 5.84149263]
[2.44406639 2.23475901 0.91205493 1.25361057 0.99753289 2.1986069
 0.6335832  1.01467294 1.83419946 1.66554996]
COMPUTE STD
[4.04190898 4.47885147 3.70805744 6.18754293 5.52300021 4.09402753
 4.0715635  3.145962   3.82298602 7.50704259]
STD
[0.89910055 0.94645142 0.86116868 1.11243363 1.05099954 0.90487872
 0.90239276 0.79321649 0.87441249 1.22531976]
[7 2 8 0 6 5 1 4 3]
['red_fruit' 'woody_2' 'vanillin' 'fruity_2' 'coffee' 'roasted' 'woody'
 'fruity' 'woody_3']
(array([], dtype=int64),)
[]
[Time: 01.07.23 13:33:01] [Level: info] transition: apply_scaling
[Time: 01.07.23 13:33:02] [Level: info] state: apply_scaling
[7 2 8 0 6 5 1 4 3]
(array([], dtype=int64),)
CURRENT DATA:  <apps.svd.TabData.TabData object at 0x7f067f54c880>
[Time: 01.07.23 13:33:02] [Level: info] transition: mfa_prerequisites
[CTRL] GET /data
[Time: 01.07.23 13:33:03] [Level: info] state: mfa_prerequisites
Calling start_power_iteration
[Time: 01.07.23 13:33:03] [Level: info] transition: start_power_iteration
[Time: 01.07.23 13:33:04] [Level: info] state: start_power_iteration
[STARTUP] Computing covariance matrix
[STARTUP] Random initialisation
TABDATA SCALED
[[ 0.32778161  0.66158656  1.19643488]
 [ 0.91332448  0.28116051 -1.26174359]
 [ 0.91226984 -0.35993602 -1.67582258]
 [ 0.83280286  0.09245508 -1.81242375]
 [-1.79902197  0.57662232  0.72660518]
 [ 0.72321829  0.39085286 -1.28025387]
 [ 1.11473772 -0.29486351 -1.70069294]
 [-1.66171362  0.33098055  0.71867966]
 [ 0.89921953  0.42920577 -1.26817869]
 [ 0.62328667  0.30695311 -1.8460684 ]]
[Time: 01.07.23 13:33:04] [Level: info] transition: aggregate_randomized_projections_cov
[Time: 01.07.23 13:33:05] [Level: info] state: aggregate_randomized_projections_cov
[CTRL] POST /data
3
Global cov
[[ 1.         -0.37371643 -0.66013298 -0.57785066  0.08502732 -0.42710933
  -0.58745535  0.16354382 -0.3105805  -0.61773274]
 [-0.37371643  1.          0.85726827  0.89215792 -0.74907249  0.99245766
   0.84686719 -0.84721622  0.99590445  0.8845561 ]
 [-0.66013298  0.85726827  1.          0.97397486 -0.72579521  0.8396432
   0.99025666 -0.74147726  0.82869762  0.94227818]
 [-0.57785066  0.89215792  0.97397486  1.         -0.67353397  0.88306234
   0.97280373 -0.70484694  0.88192445  0.9875193 ]
 [ 0.08502732 -0.74907249 -0.72579521 -0.67353397  1.         -0.66785165
  -0.77303312  0.96366251 -0.73240816 -0.57255634]
 [-0.42710933  0.99245766  0.8396432   0.88306234 -0.66785165  1.
   0.81920885 -0.79078124  0.98777365  0.89400271]
 [-0.58745535  0.84686719  0.99025666  0.97280373 -0.77303312  0.81920885
   1.         -0.77432484  0.82332622  0.93341934]
 [ 0.16354382 -0.84721622 -0.74147726 -0.70484694  0.96366251 -0.79078124
  -0.77432484  1.         -0.82808028 -0.63627492]
 [-0.3105805   0.99590445  0.82869762  0.88192445 -0.73240816  0.98777365
   0.82332622 -0.82808028  1.          0.87686598]
 [-0.61773274  0.8845561   0.94227818  0.9875193  -0.57255634  0.89400271
   0.93341934 -0.63627492  0.87686598  1.        ]]
[Time: 01.07.23 13:33:07] [Level: info] transition: compute_final_h_cov
[Time: 01.07.23 13:33:08] [Level: info] state: compute_final_h_cov
Setting k
starting eigenvector norms
3
[Time: 01.07.23 13:33:08] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:33:09] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 27.375931567327573}, {'Local Eigenvector norm': 12.567412365178424}]
[Time: 01.07.23 13:33:10] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:33:11] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:33:11] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:33:12] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [0.006611648717840916]}, {'Local Conorms': [-0.006611648717840706]}]
[Time: 01.07.23 13:33:13] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:33:14] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
3
[Time: 01.07.23 13:33:14] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:33:15] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 3.054572103101803}, {'Local Eigenvector norm': 3.293372270919753}]
[Time: 01.07.23 13:33:16] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 13:33:17] [Level: info] state: compute_local_conorm
[Time: 01.07.23 13:33:17] [Level: info] transition: aggregate_local_conorm
[CTRL] GET /data
[Time: 01.07.23 13:33:18] [Level: info] state: aggregate_local_conorm
[CTRL] POST /data
aggregating co norms
[{'Local Conorms': [0.32298921562749994, -0.3292553748888839]}, {'Local Conorms': [-0.3229892156275001, 0.3292553748888844]}]
[Time: 01.07.23 13:33:19] [Level: info] transition: compute_local_norm
[Time: 01.07.23 13:33:20] [Level: info] state: compute_local_norm
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
3
[Time: 01.07.23 13:33:20] [Level: info] transition: aggregate_local_norm
[CTRL] GET /data
[Time: 01.07.23 13:33:21] [Level: info] state: aggregate_local_norm
[CTRL] POST /data
[{'Local Eigenvector norm': 1.9686139173190933}, {'Local Eigenvector norm': 0.537423146941321}]
[Time: 01.07.23 13:33:22] [Level: info] transition: normalize_g
[Time: 01.07.23 13:33:23] [Level: info] state: normalize_g
Normalising
(3, 3)
3
End normalising
(3, 3)
(3, 3)
(3,)
(3, 3)
[Time: 01.07.23 13:33:23] [Level: info] transition: separate_pca
[CTRL] GET /data
[Time: 01.07.23 13:33:24] [Level: info] state: separate_pca
Starting factor analysis
[Time: 01.07.23 13:33:24] [Level: info] transition: projection_matrix
[Time: 01.07.23 13:33:25] [Level: info] state: projection_matrix
M [[0.33333333 0.         0.        ]
 [0.         0.33333333 0.        ]
 [0.         0.         0.33333333]]
U [[-0.18233542  0.3399857   0.34037026  0.3419617  -0.28017363  0.33396841
   0.33965956 -0.30009765  0.3340651   0.33363891]
 [-0.70122115 -0.11714845  0.17191602  0.15141082  0.44047841 -0.04425568
   0.10503168  0.40335673 -0.14849195  0.2243364 ]
 [-0.26761499 -0.31517894  0.23331966 -0.02264127 -0.50035931 -0.42045221
   0.29159055 -0.26863869 -0.39627335 -0.18091409]]
S [[0.39777629 0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.6300017  0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.79479134 0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]]
P [[-0.1256234   0.37099068  0.46856016  0.          0.          0.
   0.          0.          0.          0.        ]
 [-0.48311946 -0.12783179  0.23666285  0.          0.          0.
   0.          0.          0.          0.        ]
 [-0.18437836 -0.34392167  0.32119228  0.          0.          0.
   0.          0.          0.          0.        ]]
[Time: 01.07.23 13:33:25] [Level: info] transition: factor_scores
[Time: 01.07.23 13:33:26] [Level: info] state: factor_scores
P: [[-0.1256234   0.37099068  0.46856016  0.          0.          0.
   0.          0.          0.          0.        ]
 [-0.48311946 -0.12783179  0.23666285  0.          0.          0.
   0.          0.          0.          0.        ]
 [-0.18437836 -0.34392167  0.32119228  0.          0.          0.
   0.          0.          0.          0.        ]]
Z [[-0.77311508  0.28061224  0.42846493]
 [ 0.56127878  0.03126541 -0.62521584]
 [ 0.74494785 -0.27744968 -0.7000987 ]]
Z [[-0.77311508  0.28061224  0.42846493]
 [ 0.56127878  0.03126541 -0.62521584]
 [ 0.74494785 -0.27744968 -0.7000987 ]]
Z [[-0.77311508  0.28061224  0.42846493]
 [ 0.56127878  0.03126541 -0.62521584]
 [ 0.74494785 -0.27744968 -0.7000987 ]]
[Time: 01.07.23 13:33:26] [Level: info] transition: global_factor_score
[CTRL] GET /data
[Time: 01.07.23 13:33:27] [Level: info] state: global_factor_score
M [[0.33333333 0.         0.        ]
 [0.         0.33333333 0.        ]
 [0.         0.         0.33333333]]
U [[-0.18233542  0.3399857   0.34037026  0.3419617  -0.28017363  0.33396841
   0.33965956 -0.30009765  0.3340651   0.33363891]
 [-0.70122115 -0.11714845  0.17191602  0.15141082  0.44047841 -0.04425568
   0.10503168  0.40335673 -0.14849195  0.2243364 ]
 [-0.26761499 -0.31517894  0.23331966 -0.02264127 -0.50035931 -0.42045221
   0.29159055 -0.26863869 -0.39627335 -0.18091409]]
S [[2.51397587 0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         1.5872973  0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         1.25819186 0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.        ]]
P [[-0.79394929  0.93471575  0.74175265  0.          0.          0.
   0.          0.          0.          0.        ]
 [-3.05335107 -0.32207383  0.37464836  0.          0.          0.
   0.          0.          0.          0.        ]
 [-1.16528503 -0.86651501  0.5084624   0.          0.          0.
   0.          0.          0.          0.        ]]
[Time: 01.07.23 13:33:27] [Level: info] transition: inertia
[Time: 01.07.23 13:33:28] [Level: info] state: inertia
[Time: 01.07.23 13:33:28] [Level: info] transition: mfa_final
[Time: 01.07.23 13:33:29] [Level: info] state: mfa_final
Starting save results
[Time: 01.07.23 13:33:29] [Level: info] transition: save_results
[CTRL] GET /data
[Time: 01.07.23 13:33:30] [Level: info] state: save_results
SAVING RESULTS
saving pca/mnt/output/pca/left_eigenvectors.tsv
	
MOVE INPUT TO OUTPUT
[Time: 01.07.23 13:33:30] [Level: info] transition: finalize
[Time: 01.07.23 13:33:31] [Level: info] state: finalize
[CTRL] POST /data
[Time: 01.07.23 13:33:34] [Level: info] transition: terminal
[Time: 01.07.23 13:33:34] [Level: info] done
