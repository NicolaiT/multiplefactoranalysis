2023-07-01 14:01:31,819 CRIT Supervisor is running as root.  Privileges were not dropped because no user is specified in the config file.  If you intend to run as root, you can set user=root in the config file to avoid this message.
2023-07-01 14:01:31,822 INFO supervisord started with pid 7
2023-07-01 14:01:32,825 INFO spawned: 'nginx' with pid 10
2023-07-01 14:01:32,829 INFO spawned: 'app' with pid 11
2023-07-01 14:01:33,887 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
2023-07-01 14:01:33,888 INFO success: app entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
[CTRL] POST /setup
[Time: 01.07.23 14:01:35] [Level: info] id: 1fa59a8e3d1ab0c0
[Time: 01.07.23 14:01:35] [Level: info] coordinator: False
[Time: 01.07.23 14:01:35] [Level: info] clients: ['918cfa1e455ec42b', '1fa59a8e3d1ab0c0']
[Time: 01.07.23 14:01:35] [Level: info] state: initial
[CLIENT] Parsing parameter file...
[API] /setup parsing parameter file 
[API] /setup config file found ... parsing file: /mnt/input/config.yaml
YAML file does not follow specification: missing key: eigenvalues
Setting default: eigenvalues.tsv
YAML file does not follow specification: missing key: explained_variance
Setting default: eigenvalues.tsv
YAML file does not follow specification: missing key: output delimiter
Setting default: tab
YAML file does not follow specification: missing key: inertia
Setting default: inertia.tsv
YAML file does not follow specification: missing key: global_factor_score
Setting default: global_factor_score.tsv
YAML file does not follow specification: missing key: omic_factor_score
Setting default: omic_factor_score.tsv
YAML file does not follow specification: missing key: projection_matrix
Setting default: projection_matrix.tsv
[API] /setup config file found ... parsing done
[CLIENT] finished parsing parameter file.
[STARTUP] Instantiate SVD
[Time: 01.07.23 14:01:35] [Level: info] transition: init_pca
[Time: 01.07.23 14:01:36] [Level: info] state: init_pca
[STARTUP] Copy configuration and create dir
/mnt/input/hospital_data_bredel_1.csv
TEST: ['/mnt/input/data_wine_1.csv', '/mnt/input/data_wine_2.csv', '/mnt/input/data_wine_3.csv']
[STARTUP] Configuration copied
Log Transform performed
out {'Row names': array(['fruity', 'woody', 'coffee'], dtype=object), 'Sample count': 3, 'Nans': array([0, 0, 0])}
[Time: 01.07.23 14:01:36] [Level: info] transition: wait_for_params
[Time: 01.07.23 14:01:37] [Level: info] state: wait_for_params
[CTRL] GET /data
[CTRL] POST /data
setting parameters
[API] Setting parameters
['coffee', 'woody', 'fruity']
INDEX
[2, 1, 0]
[Time: 01.07.23 14:01:39] [Level: info] transition: compute_std
[Time: 01.07.23 14:01:40] [Level: info] state: compute_std
[CTRL] GET /data
[CTRL] POST /data
(3, 1)
[Time: 01.07.23 14:01:42] [Level: info] transition: apply_scaling
[Time: 01.07.23 14:01:43] [Level: info] state: apply_scaling
[CTRL] GET /data
[CTRL] POST /data
[0 2]
(array([], dtype=int64),)
CURRENT DATA:  <apps.svd.TabData.TabData object at 0x7fe1d6dff1c0>
[Time: 01.07.23 14:01:45] [Level: info] transition: mfa_prerequisites
[Time: 01.07.23 14:01:46] [Level: info] state: mfa_prerequisites
Calling start_power_iteration
[Time: 01.07.23 14:01:46] [Level: info] transition: start_power_iteration
[Time: 01.07.23 14:01:47] [Level: info] state: start_power_iteration
[STARTUP] Computing covariance matrix
[STARTUP] Random initialisation
TABDATA SCALED
[[-0.53813037  0.49463657  0.49463657]
 [-1.21264378  0.80546508  0.47054734]
 [ 1.07944432 -0.74520945 -0.21002947]]
[Time: 01.07.23 14:01:47] [Level: info] transition: compute_final_h_cov
[Time: 01.07.23 14:01:48] [Level: info] state: compute_final_h_cov
[CTRL] GET /data
[CTRL] POST /data
Setting k
starting eigenvector norms
2
[Time: 01.07.23 14:01:51] [Level: info] transition: compute_local_conorm
[Time: 01.07.23 14:01:52] [Level: info] state: compute_local_conorm
[CTRL] GET /data
[CTRL] POST /data
[Time: 01.07.23 14:01:54] [Level: info] transition: compute_local_norm
[Time: 01.07.23 14:01:55] [Level: info] state: compute_local_norm
[CTRL] GET /data
[CTRL] POST /data
starting orthogonalise_current
ending orthogonalise_current
starting eigenvector norms
2
[Time: 01.07.23 14:01:57] [Level: info] transition: normalize_g
[Time: 01.07.23 14:01:58] [Level: info] state: normalize_g
[CTRL] GET /data
[CTRL] POST /data
Normalising
(3, 2)
2
End normalising
(3, 2)
(2, 2)
(2,)
(3, 2)
[Time: 01.07.23 14:02:00] [Level: info] transition: separate_pca
[Time: 01.07.23 14:02:01] [Level: info] state: separate_pca
[Time: 01.07.23 14:02:01] [Level: info] Traceback (most recent call last):
  File "/app/engine/app.py", line 169, in guarded_run
    self.run()
  File "/app/engine/app.py", line 184, in run
    transition = self.current_state.run()
  File "/app/apps/svd/app.py", line 569, in run
    eigen_values = self.load('svd').get_eigenvalues()
AttributeError: 'ClientFCFederatedPCA' object has no attribute 'get_eigenvalues'

